{
  "uid" : "683e78b3ed2f3235",
  "name" : "test_download_document",
  "fullName" : "tests.test_decrees.test_decrees.TestDecrees#test_download_document",
  "historyId" : "b1cd480e4b8e23a049ed2d51bb130aab",
  "time" : {
    "start" : 1644519226010,
    "stop" : 1644519268006,
    "duration" : 41996
  },
  "description" : "\n        Проверка скачивания подписанного приказа\n        ",
  "descriptionHtml" : "<pre><code>    Проверка скачивания подписанного приказа\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 20s, while waiting for:\nbrowser.element(('xpath', '//*[@id=\"content-table\"]/table/tbody/tr[1]/td/div/div[3]/div/div/div/div[1]/span/a')).has text ПРИКАЗ ПОСТУПИЛ В РАБОТУ\n\nReason: AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\nScreenshot: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.png\nPageSource: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.html",
  "statusTrace" : "self = <selene.core.wait.Wait object at 0x7f1551dbec70>\nfn = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n/usr/local/lib/python3.8/dist-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\nargs = (<selene.core.entity.Element object at 0x7f1587060c70>,), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n>       return self._fn(*args, **kwargs)\n\n/usr/local/lib/python3.8/dist-packages/selene/core/condition.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x7f1587060c70>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\n\n/usr/local/lib/python3.8/dist-packages/selene/core/condition.py:109: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_decrees.test_decrees.TestDecrees object at 0x7f1551f20fa0>\nfor_download = None\n\n    @pytest.mark.smoke\n    @pytest.mark.seconds\n    def test_download_document(self, for_download):\n        \"\"\"\n        Проверка скачивания подписанного приказа\n        \"\"\"\n        admin_panel.auth_as_user(UsersConstants.LEYSAN_MUHAMETZYANOVA)\n        decrees_list_page.open_decree()\n>       decree_page.assert_states(\"Приказ поступил в работу\")\n\ntests/test_decrees/test_decrees.py:373: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:49: in assert_states\n    self.status_button.with_(Config(timeout=timeout)).should(have.text(status_text))\n/usr/local/lib/python3.8/dist-packages/selene/core/entity.py:379: in should\n    super().should(condition)\n/usr/local/lib/python3.8/dist-packages/selene/core/entity.py:122: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7f1551dbec70>\nfn = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 20s, while waiting for:\nE                       browser.element(('xpath', '//*[@id=\"content-table\"]/table/tbody/tr[1]/td/div/div[3]/div/div/div/div[1]/span/a')).has text ПРИКАЗ ПОСТУПИЛ В РАБОТУ\nE                       \nE                       Reason: AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\nE                       Screenshot: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.png\nE                       PageSource: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.html\n\n/usr/local/lib/python3.8/dist-packages/selene/core/wait.py:125: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1644519218663,
      "stop" : 1644519218776,
      "duration" : 113
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_admin",
    "time" : {
      "start" : 1644519218777,
      "stop" : 1644519224627,
      "duration" : 5850
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "for_download",
    "time" : {
      "start" : 1644519224627,
      "stop" : 1644519226008,
      "duration" : 1381
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        Проверка скачивания подписанного приказа\n        ",
    "status" : "failed",
    "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 20s, while waiting for:\nbrowser.element(('xpath', '//*[@id=\"content-table\"]/table/tbody/tr[1]/td/div/div[3]/div/div/div/div[1]/span/a')).has text ПРИКАЗ ПОСТУПИЛ В РАБОТУ\n\nReason: AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\nScreenshot: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.png\nPageSource: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.html",
    "statusTrace" : "self = <selene.core.wait.Wait object at 0x7f1551dbec70>\nfn = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n/usr/local/lib/python3.8/dist-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\nargs = (<selene.core.entity.Element object at 0x7f1587060c70>,), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n>       return self._fn(*args, **kwargs)\n\n/usr/local/lib/python3.8/dist-packages/selene/core/condition.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x7f1587060c70>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\n\n/usr/local/lib/python3.8/dist-packages/selene/core/condition.py:109: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_decrees.test_decrees.TestDecrees object at 0x7f1551f20fa0>\nfor_download = None\n\n    @pytest.mark.smoke\n    @pytest.mark.seconds\n    def test_download_document(self, for_download):\n        \"\"\"\n        Проверка скачивания подписанного приказа\n        \"\"\"\n        admin_panel.auth_as_user(UsersConstants.LEYSAN_MUHAMETZYANOVA)\n        decrees_list_page.open_decree()\n>       decree_page.assert_states(\"Приказ поступил в работу\")\n\ntests/test_decrees/test_decrees.py:373: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:49: in assert_states\n    self.status_button.with_(Config(timeout=timeout)).should(have.text(status_text))\n/usr/local/lib/python3.8/dist-packages/selene/core/entity.py:379: in should\n    super().should(condition)\n/usr/local/lib/python3.8/dist-packages/selene/core/entity.py:122: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7f1551dbec70>\nfn = <selene.core.conditions.ElementCondition object at 0x7f1551dbeaf0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 20s, while waiting for:\nE                       browser.element(('xpath', '//*[@id=\"content-table\"]/table/tbody/tr[1]/td/div/div[3]/div/div/div/div[1]/span/a')).has text ПРИКАЗ ПОСТУПИЛ В РАБОТУ\nE                       \nE                       Reason: AssertionError: actual text: РАССМОТРЕНИЕ ПЕРВОЙ ГРУППОЙ СОГЛАСУЮЩИХ\nE                       Screenshot: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.png\nE                       PageSource: file:///home/seluser/.selene/screenshots/1644519217802/1644519217803.html\n\n/usr/local/lib/python3.8/dist-packages/selene/core/wait.py:125: TimeoutException",
    "steps" : [ {
      "name" : "Авторизоваться на портале под ответственным пользователем",
      "time" : {
        "start" : 1644519226010,
        "stop" : 1644519234901,
        "duration" : 8891
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Авторизоваться под администратором портала",
        "time" : {
          "start" : 1644519226010,
          "stop" : 1644519226701,
          "duration" : 691
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user",
        "value" : "<common.user.User object at 0x7f15870dc9a0>"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Открыть приказ по названию",
      "time" : {
        "start" : 1644519234902,
        "stop" : 1644519247690,
        "duration" : 12788
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Открыть список приказов",
        "time" : {
          "start" : 1644519234902,
          "stop" : 1644519243836,
          "duration" : 8934
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Screen-shot done",
      "time" : {
        "start" : 1644519268188,
        "stop" : 1644519268399,
        "duration" : 211
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3a87011cd1340616",
        "name" : "screenshot",
        "source" : "3a87011cd1340616.png",
        "type" : "image/png",
        "size" : 299511
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3240c77596f66137",
      "name" : "log",
      "source" : "3240c77596f66137.txt",
      "type" : "text/plain",
      "size" : 742
    }, {
      "uid" : "305494777ac85fc5",
      "name" : "stderr",
      "source" : "305494777ac85fc5.txt",
      "type" : "text/plain",
      "size" : 434
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "for_download::0",
    "time" : {
      "start" : 1644519268400,
      "stop" : 1644519296554,
      "duration" : 28154
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Авторизоваться под администратором портала",
      "time" : {
        "start" : 1644519268400,
        "stop" : 1644519269024,
        "duration" : 624
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Открыть приказ по названию",
      "time" : {
        "start" : 1644519273219,
        "stop" : 1644519285220,
        "duration" : 12001
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Открыть список приказов",
        "time" : {
          "start" : 1644519273220,
          "stop" : 1644519280885,
          "duration" : 7665
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "auth_admin::0",
    "time" : {
      "start" : 1644519391769,
      "stop" : 1644519391778,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "decrees"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "tag",
    "value" : "seconds"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_decrees"
  }, {
    "name" : "suite",
    "value" : "test_decrees"
  }, {
    "name" : "subSuite",
    "value" : "TestDecrees"
  }, {
    "name" : "host",
    "value" : "portal-test-qa-nl25r"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_decrees.test_decrees"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "decrees", "seconds", "smoke" ]
  },
  "source" : "683e78b3ed2f3235.json",
  "parameterValues" : [ ]
}